<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Routes Management</title>

</head>
<body>

    <div class="container">
        <h1>Таблица "маршруты"</h1>

        <div class="section">
            <h2>Вывести все маршруты</h2>
            <button onclick="getAllRoutes()">Вывести все маршруты</button>
            <pre id="getAllRoutesResult"></pre>
        </div>

        <div class="section">
            <h2>Вывести маршрут по Id</h2>
            <input type="number" id="getRouteId" placeholder="Номер маршрута">
            <button onclick="getRoute()">Вывести маршрут</button>
            <pre id="getRouteResult"></pre>
        </div>

        <div class="section">
            <h2>Добавить новый маршрут</h2>
            <textarea id="newRouteJson" style="height:150px">{
                "Id": 0,
                "RouteFirstStop": "string",
                "RouteLastStop": "string",
                "RouteDistanceKm": 0.0
                }</textarea>
            <br>
            <button onclick="addRoute()">Добавить маршрут</button>
            <pre id="addRouteResult"></pre>
        </div>

        <div class="section">
            <h2>Обновить маршрут по Id</h2>
            <input type="number" id="updateRouteId" placeholder="Номер обновляемого маршрута">
            <br>
            <textarea id="updateRouteJson" style="height:150px">{
                "RouteFirstStop": "string",
                "RouteLastStop": "string",
                "RouteDistanceKm": 0.0
                }</textarea>
            <br>
            <button onclick="updateRoute()">Обновить маршрут</button>
            <pre id="updateRouteResult"></pre>
        </div>

        <div class="section">
            <h2>Удалить маршрут по Id</h2>
            <input type="number" id="deleteRouteId" placeholder="Номер удаляемого маршрута">
            <button onclick="deleteRoute()">Удалить маршрут</button>
            <pre id="deleteRouteResult"></pre>
        </div>
    </div>

    <script>
        const baseUrl = 'https://localhost:7198/Routes';

        // Функция для получения всех маршрутов
        async function getAllRoutes() {
            const response = await fetch(`${baseUrl}/GetAllRoutes`);
            const result = await response.json();
            const routes = result; // Предположим, что получаем массив маршрутов

            // Создаем таблицу для отображения всех маршрутов
            const tableContainer = document.getElementById('getAllRoutesResult');
            let tableHTML = '<table>';

            // Создаем заголовки таблицы
            tableHTML += '<thead><tr><th>ID</th><th>Конечная остановка 1</th><th>Конечная остановка 2</th><th>Протяжённость, км</th></tr></thead>';

            // Заполняем таблицу данными
            tableHTML += '<tbody>';
            routes.forEach(route => {
                tableHTML += `
                            <tr>
                                <td>${route.id}</td>
                                <td>${route.routeFirstStop}</td>
                                <td>${route.routeLastStop}</td>
                                <td>${route.routeDistanceKm}</td>
                            </tr>
                        `;
            });
            tableHTML += '</tbody></table>';

            // Вставляем таблицу на страницу
            tableContainer.innerHTML = tableHTML;
        }

        // Функция для получения маршрута по Id
        async function getRoute() {
            const id = document.getElementById('getRouteId').value;
            const response = await fetch(`${baseUrl}/GetRoute/${id}`);
            const result = await response.json();

            const tableContainer = document.getElementById('getRouteResult');

            // Проверяем, что результат не пустой
            if (result) {
                let tableHTML = '<table>';

                tableHTML += '<thead><tr><th>ID</th><th>Конечная остановка 1</th><th>Конечная остановка 2</th><th>Протяжённость, км</th></tr></thead>';
                tableHTML += '<tbody>';

                // Добавляем один ряд с данными маршрута
                tableHTML += `
                    <tr>
                        <td>${result.id}</td>
                        <td>${result.routeFirstStop}</td>
                        <td>${result.routeLastStop}</td>
                        <td>${result.routeDistanceKm}</td>
                    </tr>
                `;

                tableHTML += '</tbody></table>';
                tableContainer.innerHTML = tableHTML;
            } else {
                tableContainer.textContent = 'Маршрут не найден';
            }
        }

        // Функция для добавления нового маршрута
        async function addRoute() {
            const routeJson = document.getElementById('newRouteJson').value;
            const response = await fetch(`${baseUrl}/AddRoute`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: routeJson
            });
            const result = await response.json();

            document.getElementById('addRouteResult').textContent = `Маршрут №${result.id} добавлен.`;
        }

        // Функция для обновления существующего маршрута
        async function updateRoute() {
            const id = document.getElementById('updateRouteId').value;
            const routeJson = document.getElementById('updateRouteJson').value;
            const response = await fetch(`${baseUrl}/UpdateRoute/${id}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: routeJson
            });
            const result = await response.json();

            document.getElementById('updateRouteResult').textContent = `Маршрут №${id} обновлён.`;
        }

        // Функция для удаления маршрута
        async function deleteRoute() {
            const id = document.getElementById('deleteRouteId').value;
            const response = await fetch(`${baseUrl}/DeleteRoute/${id}`, {
                method: 'POST'
            });

            // Логируем информацию о удалённом маршруте
            document.getElementById('deleteRouteResult').textContent = `Маршрут №${id} удалён.`;
        }
    </script>
</body>
</html>
